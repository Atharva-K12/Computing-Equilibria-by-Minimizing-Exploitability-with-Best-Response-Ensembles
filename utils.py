from matplotlib.animation import FuncAnimation
import matplotlib.pyplot as plt
import csv
import os
import pandas as pd




class Logger():
    def __init__(self,loss_list):
        try:
            os.mkdir('Results')
        except FileExistsError:
            pass
        self.loss_list = loss_list
        with open('Results\loss_log.csv','w') as csv_file:
            csv_writer = csv.DictWriter(csv_file,fieldnames=loss_list)
            csv_writer.writeheader()
    def lossLog(self,loss_list):
        with open('Results\loss_log.csv','a') as csv_file:
            csv_writer = csv.DictWriter(csv_file,fieldnames=self.loss_list)
            csv_writer.writerow(loss_list)


class Plotter():
    def __init__(self):
        try:
            os.mkdir('Results')
        except FileExistsError:
            pass
        self.count=0   
    def loss_plotter(self):
        data =pd.read_csv('Results/loss_log.csv')
        plt.figure(figsize=(10,5))
        plt.title("Loss")
        for losses in list(data.columns.values.tolist()):
            plt.plot(data[losses],label=str(losses))
        plt.xlabel("iterations")
        plt.ylabel("Loss")
        plt.legend()  
        plt.savefig('Results/Loss')
    # def loss_live_plotter(self):
    #     def _animation(i):
    #         data=pd.read_csv('Results/loss_log.csv')
    #         plt.cla()
    #         plt.figure(figsize=(10,5))
    #         plt.subplot(1,2,1)
    #         plt.title("last 100 iter Loss")
    #         for losses in list(data.columns.values.tolist()):
    #             # plot only latest 100 iterations
    #             plt.plot(data[losses][-100:],label=str(losses))
    #         plt.xlabel("iterations")
    #         plt.ylabel("Complete Loss")
    #         plt.legend()
    #         plt.subplot(1,2,2)
    #         plt.title("Loss")
    #         for losses in list(data.columns.values.tolist()):
    #             plt.plot(data[losses],label=str(losses))
    #         plt.xlabel("iterations")
    #         plt.ylabel("Loss")
    #         plt.legend()
    #         #plt.tight_layout()
    #     ani=FuncAnimation(plt.gcf(),_animation)
    #     plt.show()

    def loss_live_plotter(self):
        def animate(i):
            data = pd.read_csv('Results/loss_log.csv')
            n = len(data)
            last_n = 100
            plt.clf()
            plt.subplot(1,2,1)
            plt.plot(range(max(0, n-last_n), n), data['Exploitability'].tail(last_n))
            plt.title('Last 100 values')
            plt.xlabel('Iters')
            plt.ylabel('Loss')
            plt.subplot(1,2,2)
            plt.plot(data['Exploitability'])
            plt.title('All values')
            plt.xlabel('Iters')
            plt.ylabel('Loss')
            plt.tight_layout()

        ani = FuncAnimation(plt.gcf(), animate, interval=1000)
        plt.show()
